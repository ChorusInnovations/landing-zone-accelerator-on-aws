// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BootstrapStack Construct(BootstrapStack):  Snapshot Test 1`] = `
{
  "Outputs": {
    "BootstrapVersionOutput": {
      "Description": "The version of the bootstrap resources that are currently mastered in this stack",
      "Value": "16",
    },
    "BucketDomainNameOutput": {
      "Description": "The domain name of the S3 bucket owned by the CDK toolkit stack",
      "Value": "cdk-accel-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com",
    },
    "BucketNameOutput": {
      "Description": "The name of the S3 bucket owned by the CDK toolkit stack",
      "Value": "cdk-accel-assets-111111111111-us-east-1",
    },
    "FileAssetKeyArnOutput": {
      "Description": "The ARN of the KMS key used to encrypt the asset bucket ",
      "Export": {
        "Name": "CdkBootstrap-accel-FileAssetKeyArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "AssetEncryptionKey49BA7B12",
          "Arn",
        ],
      },
    },
    "ImageRepositoryNameOutput": {
      "Description": "The name of the ECR repository which hosts docker image assets ",
      "Value": "cdk-accel-container-assets-111111111111-us-east-1",
    },
  },
  "Parameters": {
    "CloudFormationExecutionPolicies": {
      "Type": "String",
    },
    "ContainerAssetsRepositoryName": {
      "Default": "",
      "Type": "String",
    },
    "FileAssetsBucketKmsKeyId": {
      "Default": "",
      "Type": "String",
    },
    "FileAssetsBucketName": {
      "Default": "",
      "Type": "String",
    },
    "PublicAccessBlockConfiguration": {
      "Type": "String",
    },
    "Qualifier": {
      "Type": "String",
    },
    "TrustedAccounts": {
      "Type": "CommaDelimitedList",
    },
    "TrustedAccountsForLookup": {
      "Type": "String",
    },
  },
  "Resources": {
    "AssetEncryptionKey49BA7B12": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Key used to encrypt centralized CDK assets",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "Management Actions",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": "o-asdf123456",
                  "kms:ViaService": "s3.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow S3 to use the encryption key",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:PrincipalARN": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::*:role/AWSAccelerator-*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:PrincipalOrgID": "o-asdf123456",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow org to perform encryption",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": "o-asdf123456",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com",
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AssetEncryptionKeyAliasF99A8AC7": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/cdk/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AssetEncryptionKey49BA7B12",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "CdkBootstrapVersion": {
      "Properties": {
        "Name": "/cdk-bootstrap/accel/version",
        "Type": "String",
        "Value": "16",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ContainerAssetsRepository": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "ImageTagMutability": "IMMUTABLE",
        "RepositoryName": "cdk-accel-container-assets-111111111111-us-east-1",
        "RepositoryPolicyText": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer",
              ],
              "Condition": {
                "StringLike": {
                  "aws:sourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:us-east-1:111111111111:function:*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
              "Sid": "LambdaECRImageRetrievalPolicy-insecure-connections",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-BootstrapStack-111111111111-us-east-1/version",
        "Type": "String",
        "Value": "1.3.2",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-BootstrapStack-111111111111-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "StagingBucket": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "StagingBucket has server access logs disabled until the task for access logging completed.",
            },
            {
              "id": "AwsSolutions-S10",
              "reason": "StagingBucket denies insecure requests via the bucket policy.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "AssetEncryptionKey49BA7B12",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "cdk-accel-assets-111111111111-us-east-1",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "CleanupOldVersions",
              "NoncurrentVersionExpiration": {
                "NoncurrentDays": 365,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StagingBucketPolicy83BEDEEE": {
      "Properties": {
        "Bucket": {
          "Ref": "StagingBucket",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": "o-asdf123456",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "StagingBucket",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "deny-insecure-connections",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
}
`;
